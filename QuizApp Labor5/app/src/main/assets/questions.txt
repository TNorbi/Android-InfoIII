Who is the creator of Kotlin? | JetBrains;Google;Microsoft;None of these | JetBrains
Which is a valid function declaration in Kotlin? | int sum(int a, int b);int sum(a: Int, b: Int);function sum(a: Int, b: Int): Int;fun sum(a: Int, b: Int): Int | fun sum(a: Int, b: Int): Int
What is the difference between val and var in Kotlin? | Variables declared with val are final,those with var are not;var is scoped to the nearest function block and val is scoped to the nearest enclosing block;Variables declared with var are final,those with val are not;Variables declared with val can only acces const members | Variables declared with val are final,those with var are not
What does a data class not offer? | Automatic conversion from/to JSON;An auto-generated toString() method;Auto-generated hashCode() and equals() methods;A generated copy(...) method, to create copies of instances | Automatic conversion from/to JSON
Which of these targets does Kotlin currently not support? | .NET CLR;JVM;JavaScript; LLVM | .NET CLR
What are Kotlin coroutines? | These are functions which accept other functions as arguments or return them;They provide asynchronous code without thread blocking;It's Kotlin's term of class methods;That's how the automatically generated methods hashCode() and equals() in data classes are called | They provide asynchronous code without thread blocking
What is the correct way to declare a variable of integer type in Kotlin? | var i : Int = 42;var i : int = 42;let i = 42; int i = 42 | var i : Int = 42
What is the correct syntax to convert the String "42" to a Long in Kotlin? | val l: Long = "42.toLong()"; val l: Long = <Long>"42"; val l: Long = (Long)"42"; val l: Long = Long.parseLong("42") | val l: Long = "42.toLong()"
Does Kotlin have primitive data types, such as int, long, float? | Yes, Kotlin is similar to Java in this respect; No, not at language level. But the Kotlin compiler makes use of JVM primitives for best performance; Yes, but Kotlin internally always converts them to their non-primitive counterparts; No, Kotlin does not have nor use primitive data types | No, not at language level. But the Kotlin compiler makes use of JVM primitives for best performance
What does the !! operator do? | It converts any value to a non-null type and throws an exception if the value is in fact null; It compares two values for identity rather than equality; It returns the left-hand operand if the operand is not null; otherwise it returns the rigth hand operand; It's the modulo operator in Kotlin, similar to Java's % |  It converts any value to a non-null type and throws an exception if the value is in fact null